# implementation of card game - Memory
import simplegui
import random


# helper function to initialize globals
def new_game():
    global num_list, exposed, state, turns

    state = 0  # Game state reset
    turns = 0  # Turns reset
    num_list = [i for i in range(1, 9)] + [i for i in range(1, 9)]  # Two list of 1 through 8 concatenated
    exposed = [False for i in range(0, 16)]  # List to keep track of exposed cards
    random.shuffle(num_list)  # Randomize the order of the numbers


# define event handlers
def mouseclick(pos):
    global exposed, state, card_1, card_2, turns

    x = pos[0] / 50  # This provides the index of the card
    if not exposed[x]:  # Check if card clicked on is already exposed
        if state == 0:
            card_1 = x  # Index of first card
            state = 1
        elif state == 1:
            turns += 1  # Increase number of turns when second card is flipped
            card_2 = x  # Index of second card
            state = 2
        else:
            if not num_list[card_1] == num_list[card_2]:  # If the cards don't match
                exposed[card_1] = False  # Flip the cards back
                exposed[card_2] = False
            state = 1  
            card_1 = x  # Record new card one
        exposed[x] = True  # Flip card one over

        
# cards are logically 50x100 pixels in size
def draw(canvas):
    label.set_text("Turns = " + str(turns))  # Update turns label
    for i in range(16):  # Draw 16 cards 
        x = i * 50  # Move position of cards on each iteration  
        text_width = frame.get_canvas_textwidth(str(num_list[i]), 60)  # Take the Guess work out of centering 
        canvas.draw_polygon([[x, 0], [x, 100], [x + 50, 100], [x + 50, 0]], 1, 'Gray', 'Green')
        if exposed[i]:  # If card is exposed draw it flipped over 
            canvas.draw_polygon([[x, 0], [x, 100], [x + 50, 100], [x + 50, 0]], 1, 'Gray', 'Black')
            canvas.draw_text(str(num_list[i]), (x + (25 - (text_width / 2)), 70), 60, 'White')


# create frame and add a button and labels
frame = simplegui.create_frame("Memory", 800, 100)
frame.add_button("Reset", new_game)
label = frame.add_label("Turns = 0")

# register event handlers
frame.set_mouseclick_handler(mouseclick)
frame.set_draw_handler(draw)

# get things rolling
new_game()
frame.start()
# Always remember to review the grading rubric
